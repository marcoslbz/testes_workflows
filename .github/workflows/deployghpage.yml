name: Deploy GitHub Pages

on:
  # Executa manualmente ou em push para a branch main
  workflow_dispatch:
  push:
    branches: ["main"]
  schedule:
    - cron: "0 * * * *"  # Executa a cada hora

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Versão do Node.js, pode ser ajustada conforme necessário
      
      # Instalar dependências
      - name: Install dependencies
        run: |
          npm install axios p-limit fs  # Instalar as dependências que você precisa

      # Executar o script obras_map.mjs
      - name: Run obras_map.mjs
        run: |
          node --experimental-modules TestesMapa/obrasgov/obras_map.mjs  # Executa o script .mjs    
      
      # Commit das mudanças
      # Fazer commit do novo JSON (se houve alterações)
      - name: Commit and Push JSON
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@users.noreply.github.com"
          git pull origin main
          git add TestesMapa/obrasgov/obras_com_lat_long.json
          git commit -m "Atualiza data.json"
          git push
    

      # Configurar GitHub Pages
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Fazer upload da pasta TestesMapa como artefato para as Pages
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './TestesMapa' # Caminho para a pasta com o index.html

      # Deploy para o GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
